---
jupyter: python3
html-table-processing: none
---

<div style="text-align: center;">

![](/assets/pointblank_logo.svg){width=75%}

_Data validation made beautiful and powerful_

</div>

Pointblank is a modern data validation framework for Python that helps you trust your data with confidence. It provides a fluent, expressive API to validate your data against a wide range of constraints and presents results in beautiful, interactive reports.

Whether you're a data scientist, data engineer, or analyst, Pointblank helps you catch data quality issues before they impact your analyses or downstream systems.

## Getting Started

Let's take a Polars DataFrame and validate it against a set of constraints. We do that by using the
`Validate` class along with adding validation steps:

```python
import pointblank as pb

validation = (
    pb.Validate(data=pb.load_dataset(dataset="small_table")) # Use Validate() to start
    .col_vals_gt(columns="d", value=100)       # STEP 1      |
    .col_vals_le(columns="c", value=5)         # STEP 2      | <-- Build up a validation plan
    .col_exists(columns=["date", "date_time"]) # STEPS 3 & 4 |
    .interrogate() # This will execute all validation steps and collect intel
)

validation
```

<div style="text-align: center;">

![](/assets/pointblank-tabular-report.png){width=100%}

</div>

## Real-World Example

```python
import pointblank as pb
import polars as pl

# Load your data
sales_data = pl.read_csv("sales_data.csv")

# Create a comprehensive validation
validation = (
    pb.Validate(data=sales_data)
    .col_vals_between(            # Check numeric ranges with precision
        columns=["price", "quantity"],
        left=0, right=1000
    )
    .col_vals_not_null(           # Ensure required fields don't have nulls
        columns=["product_id", "customer_id", "timestamp"]
    )
    .col_vals_regex(              # Validate patterns with regex
        columns="email",
        pattern="^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
    )
    .col_vals_in_set(             # Check categorical values
        columns="status",
        set=["pending", "shipped", "delivered", "returned"]
    )
    .conjointly(                  # Combine multiple conditions
        lambda df: pb.expr_col("revenue") == pb.expr_col("price") * pb.expr_col("quantity"),
        lambda df: pb.expr_col("tax") >= pb.expr_col("revenue") * 0.05
    )
    .interrogate()
)
```

```python
# Get an HTML report you can share with your team
validation.get_tabular_report().show("browser")
```

<div style="text-align: center;">

![](/assets/pointblank-real-world-example.png){width=100%}

</div>

```python
# Get a report of failing records from a specific step
validation.get_step_report(i=3).show("browser")  # Get failing records from step 3
```

<div style="text-align: center;">

![](/assets/pointblank-step-report.png){width=100%}

</div>


## Installation

You can install Pointblank using pip:

```bash
pip install pointblank
```

You can also install Pointblank from Conda-Forge by using:

```bash
conda install conda-forge::pointblank
```

If you don't have Polars or Pandas installed, you'll need to install one of them to use Pointblank.

```bash
pip install "pointblank[pl]" # Install Pointblank with Polars
pip install "pointblank[pd]" # Install Pointblank with Pandas
```

To use Pointblank with DuckDB, MySQL, PostgreSQL, or SQLite, install Ibis with the appropriate backend:

```bash
pip install "pointblank[duckdb]"   # Install Pointblank with Ibis + DuckDB
pip install "pointblank[mysql]"    # Install Pointblank with Ibis + MySQL
pip install "pointblank[postgres]" # Install Pointblank with Ibis + PostgreSQL
pip install "pointblank[sqlite]"   # Install Pointblank with Ibis + SQLite
```

## Getting in Touch

If you encounter a bug, have usage questions, or want to share ideas to make this package better,
please feel free to file an [issue](https://github.com/posit-dev/pointblank/issues).

Wanna talk about data validation in a more relaxed setting? Join our
[_Discord server_](https://discord.com/invite/YH7CybCNCQ)! This is a great option for asking about
the development of Pointblank, pitching ideas that may become features, and just sharing your ideas!

[![](https://img.shields.io/badge/Discord-Chat%20with%20us-blue?style=social&logo=discord&logoColor=purple)](https://discord.com/invite/YH7CybCNCQ)

## Contributing to Pointblank

There are many ways to contribute to the ongoing development of Pointblank. Some contributions can
be simple (like fixing typos, improving documentation, filing issues for feature requests or
problems, etc.) and others might take more time and care (like answering questions and submitting
PRs with code changes). Just know that anything you can do to help would be very much appreciated!

Please read over the [contributing guidelines](https://github.com/posit-dev/pointblank/blob/main/CONTRIBUTING.md)
for information on how to get started.

## Code of Conduct

Please note that the Pointblank project is released with a
[contributor code of conduct](https://www.contributor-covenant.org/version/2/1/code_of_conduct/).
<br>By participating in this project you agree to abide by its terms.

## üìÑ License

Pointblank is licensed under the MIT license.

¬© Posit Software, PBC.

## üèõÔ∏è Governance

This project is primarily maintained by
[Rich Iannone](https://bsky.app/profile/richmeister.bsky.social). Other authors may occasionally
assist with some of these duties.
